// 既定値を上書きするには、このファイル内にキー バインドを挿入しますauto[]
[
    {
        "key": "ctrl+shift+down",
        "command": "editor.action.copyLinesDownAction",
        "when": "editorTextFocus && !editorReadonly"
    },
    { "key": "cmd+shift+enter", "command": "workbench.action.terminal.focus" },
    { "key": "cmd+shift+enter", "command": "workbench.action.focusActiveEditorGroup", "when":"terminalFocus" },
    {
        "key": "shift+alt+down",
        "command": "-editor.action.copyLinesDownAction",
        "when": "editorTextFocus && !editorReadonly"
    },
    {
        "key": "ctrl+shift+up",
        "command": "editor.action.copyLinesUpAction",
        "when": "editorTextFocus && !editorReadonly"
    },
    {
        "key": "shift+alt+up",
        "command": "-editor.action.copyLinesUpAction",
        "when": "editorTextFocus && !editorReadonly"
    },
    {
        "key": "ctrl+shift+a",
        "command": "editor.action.selectAll",
        "when": "textInputFocus"
    },
    {
        "key": "cmd+a",
        "command": "-editor.action.selectAll",
        "when": "textInputFocus"
    },
    {
        "key": "f3",
        "command": "-workbench.action.terminal.findNext",
        "when": "terminalFocus"
    },
    {
        "key": "f3",
        "command": "-workbench.action.terminal.findNext",
        "when": "terminalFindWidgetFocused"
    },
    {
        "key": "f3",
        "command": "-editor.action.nextMatchFindAction",
        "when": "editorFocus"
    },
    {
        "key": "ctrl+t",
        "command": "python.execSelectionInTerminal",
        "when": "editorTextFocus && !findInputFocussed && !python.datascience.ownsSelection && !replaceInputFocussed && editorLangId == 'python'"
    },
    {
        "key": "shift+enter",
        "command": "-python.execSelectionInTerminal",
        "when": "editorTextFocus && !findInputFocussed && !python.datascience.ownsSelection && !replaceInputFocussed && editorLangId == 'python'"
    },
    {
        "key": "f10",
        "command": "workbench.action.terminal.runActiveFile"
    },
    {
        "key": "ctrl+/",
        "command": "actions.find"
    },
    {
        "key": "cmd+f",
        "command": "-actions.find"
    },
    {
        "key": "ctrl+shift+/",
        "command": "editor.action.startFindReplaceAction"
    },
    {
        "key": "alt+cmd+f",
        "command": "-editor.action.startFindReplaceAction"
    },
    {
        "key": "ctrl+r",
        "command": "expandLineSelection",
        "when": "textInputFocus"
    },
    {
        "key": "cmd+l",
        "command": "-expandLineSelection",
        "when": "textInputFocus"
    },
    {
        "key": "ctrl+z",
        "command": "undo",
        "when": "textInputFocus && !editorReadonly"
    },
    {
        "key": "cmd+z",
        "command": "-undo",
        "when": "textInputFocus && !editorReadonly"
    },
    {
        "key": "shift+down",
        "command": "cursorDownSelect",
        "when": "textInputFocus"
    },
    {
        "key": "shift+down",
        "command": "-cursorDownSelect",
        "when": "textInputFocus"
    },
    {
        "key": "ctrl+s",
        "command": "workbench.action.files.save",
        "when": "editorTextFocus"
    },
    {
        "key": "ctrl+x ctrl+s",
        "command": "-workbench.action.files.save",
        "when": "editorTextFocus"
    },
    {
        "key": "ctrl+v",
        "command": "-emacs.cursorPageDown",
        "when": "editorTextFocus && !suggestWidgetVisible"
    },
    {
        "key": "ctrl+x",
        "command": "-filesExplorer.cut",
        "when": "explorerViewletVisible && filesExplorerFocus && !explorerResourceIsRoot && !inputFocus"
    },
    {
        "key": "ctrl+x ctrl+n",
        "command": "-workbench.action.newWindow"
    },
    {
        "key": "ctrl+x ctrl+l",
        "command": "-editor.action.transformToLowercase",
        "when": "editorTextFocus && !editorReadonly"
    },
    {
        "key": "ctrl+x 1",
        "command": "-workbench.action.closeEditorsInOtherGroups"
    },
    {
        "key": "ctrl+x b",
        "command": "-workbench.action.showAllEditors"
    },
    {
        "key": "ctrl+x ctrl+k",
        "command": "-workbench.action.closeAllEditors"
    },
    {
        "key": "ctrl+x 0",
        "command": "-workbench.action.closeEditorsInGroup"
    },
    {
        "key": "ctrl+x 3",
        "command": "-workbench.action.splitEditorRight"
    },
    {
        "key": "ctrl+x 2",
        "command": "-workbench.action.splitEditorDown"
    },
    {
        "key": "ctrl+x k",
        "command": "-workbench.action.closeActiveEditor"
    },
    {
        "key": "ctrl+x z",
        "command": "-workbench.action.toggleZenMode"
    },
    {
        "key": "ctrl+x h",
        "command": "-editor.action.selectAll",
        "when": "editorTextFocus"
    },
    {
        "key": "ctrl+x k",
        "command": "-workbench.action.closeWindow",
        "when": "!editorIsOpen"
    },
    {
        "key": "ctrl+x ctrl+w",
        "command": "-workbench.action.files.saveAs",
        "when": "editorTextFocus"
    },
    {
        "key": "ctrl+x r",
        "command": "-workbench.action.openRecent"
    },
    {
        "key": "ctrl+x o",
        "command": "-workbench.action.navigateEditorGroups"
    },
    {
        "key": "ctrl+x 4",
        "command": "-workbench.action.toggleEditorGroupLayout"
    },
    {
        "key": "ctrl+x ctrl+f",
        "command": "-workbench.action.quickOpen"
    },
    {
        "key": "ctrl+x ctrl+o",
        "command": "-closeFindWidget",
        "when": "editorFocus && findWidgetVisible"
    },
    {
        "key": "ctrl+x u",
        "command": "-closeFindWidget",
        "when": "editorFocus && findWidgetVisible"
    },
    {
        "key": "ctrl+x h",
        "command": "-closeFindWidget",
        "when": "editorFocus && findWidgetVisible"
    },
    {
        "key": "ctrl+x u",
        "command": "-emacs.C-/",
        "when": "editorTextFocus && !editorReadonly"
    },
    {
        "key": "ctrl+x ctrl+o",
        "command": "-emacs.C-x_C-o",
        "when": "editorTextFocus && !editorReadonly"
    },
    {
        "key": "ctrl+shift+k",
        "command": "workbench.action.terminal.clear"
    }
]